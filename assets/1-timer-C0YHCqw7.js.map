{"version":3,"file":"1-timer-C0YHCqw7.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// user datapicker value\nlet userSelectedDate = null;\nlet countdown = 0;\n\n// datapicker options\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // validation\n    userSelectedDate = selectedDates[0];\n    disableStartBtn(validationDateForFuture(userSelectedDate));\n  },\n};\n\n// disable stat button by dafault\nconst disableStartBtn = (state = true) => {\n  const btn = document.querySelector('button[data-start]');\n  state\n    ? btn.setAttribute('disabled', 'disabled')\n    : btn.removeAttribute('disabled');\n};\ndisableStartBtn(true); // disabled by default\n\n// distance for countdown (by default return NaN)\nconst getDistance = userSelectedDate => {\n  return Math.floor(Date.parse(userSelectedDate)) - Math.floor(Date.now());\n};\n\n// validation datapicker\nconst validationDateForFuture = userSelectedDate => {\n  if (getDistance(userSelectedDate) < 0) {\n    iziToast.error({\n      title: 'Error.',\n      message: 'Please choose a date in the future.',\n      position: 'topRight',\n      timeout: 5000,\n    });\n    return true;\n  } else {\n    return false;\n  }\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => value.toString().padStart(2, '0');\n\nconst renderFragment = (\n  days = '00',\n  hours = '00',\n  minutes = '00',\n  seconds = '00'\n) => {\n  return `<div class=\"field\">\n        <span class=\"value\" data-days>${addLeadingZero(days)}</span>\n        <span class=\"label\">Days</span>\n    </div>\n    <div class=\"field\">\n        <span class=\"value\" data-hours>${addLeadingZero(hours)}</span>\n        <span class=\"label\">Hours</span>\n    </div>\n    <div class=\"field\">\n        <span class=\"value\" data-minutes>${addLeadingZero(minutes)}</span>\n        <span class=\"label\">Minutes</span>\n    </div>\n    <div class=\"field\">\n        <span class=\"value\" data-seconds>${addLeadingZero(seconds)}</span>\n        <span class=\"label\">Seconds</span>\n    </div>`;\n};\n\n// btn start click handler\ndocument.querySelector('button[data-start]').addEventListener('click', e => {\n  disableStartBtn(true); // disable start btn\n  iziToast.success({\n    title: 'Attention.',\n    message: 'Press \"Esc\" button for reset countdown.',\n    position: 'topRight',\n    timeout: 5000,\n  });\n  countdown = setInterval(() => {\n    let distance = getDistance(userSelectedDate);\n    if (0 === distance) {\n      clearInterval(countdown);\n    }\n    const { days, hours, minutes, seconds } = convertMs(distance);\n    // render\n    document.querySelector('.timer').innerHTML = renderFragment(\n      days,\n      hours,\n      minutes,\n      seconds\n    );\n  }, 1000);\n});\n\ndocument.addEventListener('keydown', event => {\n  if (countdown && event.key === 'Escape') {\n    clearInterval(countdown);\n    document.querySelector('.timer').innerHTML = renderFragment(); // reset 00 00 00 00\n    disableStartBtn(false); // enable start btn\n    iziToast.success({\n      title: 'Done.',\n      message: 'Countdown was reseted.',\n      position: 'topRight',\n      timeout: 5000,\n    });\n  }\n});\n\n// GO!\ntry {\n  flatpickr('#datetime-picker', options);\n} catch (e) {\n  console.log(e);\n}\n"],"names":["userSelectedDate","countdown","options","selectedDates","disableStartBtn","validationDateForFuture","state","btn","getDistance","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","renderFragment","distance","event","flatpickr"],"mappings":"svBAUA,IAAIA,EAAmB,KACnBC,EAAY,EAGhB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErBH,EAAmBG,EAAc,CAAC,EAClCC,EAAgBC,EAAwBL,CAAgB,CAAC,CAC1D,CACH,EAGMI,EAAkB,CAACE,EAAQ,KAAS,CACxC,MAAMC,EAAM,SAAS,cAAc,oBAAoB,EACvDD,EACIC,EAAI,aAAa,WAAY,UAAU,EACvCA,EAAI,gBAAgB,UAAU,CACpC,EACAH,EAAgB,EAAI,EAGpB,MAAMI,EAAcR,GACX,KAAK,MAAM,KAAK,MAAMA,CAAgB,CAAC,EAAI,KAAK,MAAM,KAAK,IAAK,CAAA,EAInEK,EAA0BL,GAC1BQ,EAAYR,CAAgB,EAAI,GAClCS,EAAS,MAAM,CACb,MAAO,SACP,QAAS,sCACT,SAAU,WACV,QAAS,GACf,CAAK,EACM,IAEA,GAIX,SAASC,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAE1DC,EAAiB,CACrBN,EAAO,KACPC,EAAQ,KACRC,EAAU,KACVC,EAAU,OAEH;AAAA,wCAC+BC,EAAeJ,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA,yCAInBI,EAAeH,CAAK,CAAC;AAAA;AAAA;AAAA;AAAA,2CAInBG,EAAeF,CAAO,CAAC;AAAA;AAAA;AAAA;AAAA,2CAIvBE,EAAeD,CAAO,CAAC;AAAA;AAAA,YAMlE,SAAS,cAAc,oBAAoB,EAAE,iBAAiB,QAAS,GAAK,CAC1EX,EAAgB,EAAI,EACpBK,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,0CACT,SAAU,WACV,QAAS,GACb,CAAG,EACDR,EAAY,YAAY,IAAM,CAC5B,IAAIkB,EAAWX,EAAYR,CAAgB,EACjCmB,IAAN,GACF,cAAclB,CAAS,EAEzB,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAQ,EAE5D,SAAS,cAAc,QAAQ,EAAE,UAAYD,EAC3CN,EACAC,EACAC,EACAC,CACN,CACG,EAAE,GAAI,CACT,CAAC,EAED,SAAS,iBAAiB,UAAWK,GAAS,CACxCnB,GAAamB,EAAM,MAAQ,WAC7B,cAAcnB,CAAS,EACvB,SAAS,cAAc,QAAQ,EAAE,UAAYiB,EAAc,EAC3Dd,EAAgB,EAAK,EACrBK,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,yBACT,SAAU,WACV,QAAS,GACf,CAAK,EAEL,CAAC,EAGD,GAAI,CACFY,EAAU,mBAAoBnB,CAAO,CACvC,OAAS,EAAG,CACV,QAAQ,IAAI,CAAC,CACf"}